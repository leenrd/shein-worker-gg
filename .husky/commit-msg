#!/bin/sh
echo "Git Hook Triggered! Checking commit message..."
if [ ! -f "$1" ]; then
    echo "--------------------------------------------------------------------"
    echo "WARNING:⚠️  Aborting commit. No commit message provided." >&2
    echo "--------------------------------------------------------------------"
    echo "DESC: commit-msg should be formatted as 'type: message' and not exceed 88 characters."
    echo "EXAMPLE: <type>[optional scope]: <description> => feat(api): send an email to the customer"
    echo "OPTIONS: type can be feat, fix, chore, docs, test, style, refactor, perf, build, ci, revert, enhancement"
    exit 1
fi
if ! head -1 "$1" | grep -qE "^(feat|fix|chore|docs|test|style|refactor|perf|build|ci|revert|enhancement)(\(.+?\))?: .{1,}$"; then
    echo "--------------------------------------------------------------------"
    echo "WARNING:⚠️  Aborting commit. Your commit message is invalid." >&2
    echo "--------------------------------------------------------------------"
    echo "DESC: commit-msg should be formatted as 'type: message' and not exceed 88 characters."
    echo "EXAMPLE: <type>[optional scope]: <description> => feat(api): send an email to the customer"
    echo "OPTIONS: type can be feat, fix, chore, docs, test, style, refactor, perf, build, ci, revert, enhancement"
    exit 1
fi
if ! head -1 "$1" | grep -qE "^.{1,88}$"; then
    echo "--------------------------------------------------------------------"
    echo "WARNING:⚠️  Aborting commit. Your commit message is too long." >&2
    echo "--------------------------------------------------------------------"
    echo "DESC: commit-msg should be formatted as 'type: message' and not exceed 88 characters."
    echo "EXAMPLE: <type>[optional scope]: <description> => feat(api): send an email to the customer"
    echo "OPTIONS: type can be feat, fix, chore, docs, test, style, refactor, perf, build, ci, revert, enhancement"
    exit 1
fi
echo "SUCCESS:✨ Commit message is valid. Good job nigga!! 🚀"
